/*
服务
它包括应用所需的任何值、函数或特性。狭义的服务是一个明确定义了用途的类。它应该做一些具体的事，并做好。

Angular 把组件和服务区分开，以提高模块性和复用性。
理想状态下：
    1.通过把组件中和视图有关的功能与其他类型的处理分离开，你可以让组件类更加精简、高效。
    组件的工作只管用户体验，而不用顾及其它。 它应该提供用于数据绑定的属性和方法，
    以便作为视图（由模板渲染）和应用逻辑（通常包含一些模型的概念）的中介者。
    2.组件不应该定义任何诸如从服务器获取数据、验证用户输入或直接往控制台中写日志等工作。
    而要把这些任务委托给各种服务。通过把各种处理任务定义到可注入的服务类中，
    你可以让它可以被任何组件使用。 通过在不同的环境中注入同一种服务的不同提供商，
    你还可以让你的应用更具适应性。
 */

/*
依赖注入
服务可以互相依赖
服务通常可以放在构造函数中
在 Angular 中，要把一个类定义为服务，就要用 @Injectable 装饰器来提供元数据，以便让 Angular 可以把它作为依赖注入到组件中。
同样，也要使用 @Injectable 装饰器来表明一个组件或其它类（比如另一个服务、管道或 NgModule）拥有一个依赖。 依赖并不必然是服务，它也可能是函数或值等等。
 */

/*
提供服务
providers:[]
1.根模块 服务于所有组件
2.组件级 该组件的所有实例
 */