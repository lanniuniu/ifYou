/**
 * Created by 懒牛牛 on 2017/1/8.
 */
/**
 * 正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为"元字符"）组成的文字模式。
 * 模式描述在搜索文本时要匹配的一个或多个字符串。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。
 */

//普通字符，包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。
//非打印字符 \cx \f \n \r \s \S \t \v
//特殊字符 $ () * + ? . [] \ ^ {} |
//限定符 限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有*或+或?或{n}或{n,}或{n,m}共6种。
//通过在 *、+ 或 ? 限定符之后放置 ?，该表达式从"贪心"表达式转换为"非贪心"表达式或者最小匹配。
var patt1 = new RegExp(/<.*?>/);
console.log(patt1.exec('<H1>Chapter 1</H1>'));
//定位符 ^ $ \b（字边界） \B (ps：大写都是指非)
//不能将限定符与定位点一起使用。由于在紧靠换行或者字边界的前面或后面不能有一个以上位置，因此不允许诸如 ^* 之类的表达式。
var patt2 = new RegExp(/k\b/);
console.log(patt2.exec('ok'));
var patt3 = new RegExp(/\bapt\b/);
console.log(patt3.exec('chapter'));